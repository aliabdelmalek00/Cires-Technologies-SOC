version: "3.9"

networks:
  wazuh-net:
    driver: overlay
    attachable: true

services:
  traefik:
    image: traefik:v2.11
    command:
      - "--api.insecure=true"                     
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.wazuh-tcp.address=:1514/tcp"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.email=ali.abdelmalek00@gmail.com"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "1514:1514/tcp"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/share/wazuh/traefik:/letsencrypt"
    networks:
      - wazuh-net
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: any
        
  wazuh-master:
    image: wazuh/wazuh-manager:4.10.3
    networks:
      - wazuh-net
    ports:
      - "1515:1515"
      - "514:514/udp"
      - "55000:55000"
    environment:
      - INDEXER_URL=https://wazuh1.indexer:9200
      - INDEXER_USERNAME=admin
      - INDEXER_PASSWORD=SecretPassword
      - FILEBEAT_SSL_VERIFICATION_MODE=full
      - SSL_CERTIFICATE_AUTHORITIES=/etc/ssl/root-ca.pem
      - SSL_CERTIFICATE=/etc/ssl/filebeat.pem
      - SSL_KEY=/etc/ssl/filebeat.key
      - API_USERNAME=wazuh-wui
      - API_PASSWORD=MyS3cr37P450r.*-
    volumes:
      - /share/wazuh/manager/api/configuration:/var/ossec/api/configuration
      - /share/wazuh/manager/etc:/var/ossec/etc
      - /share/wazuh/manager/logs:/var/ossec/logs
      - /share/wazuh/manager/queue:/var/ossec/queue
      - /share/wazuh/manager/integrations:/var/ossec/integrations
      - /share/wazuh/manager/agentless:/var/ossec/agentless
      - /share/wazuh/manager/wodles:/var/ossec/wodles
      - /share/wazuh/manager/filebeat-etc:/etc/filebeat
      - /share/wazuh/manager/filebeat-var:/var/lib/filebeat
      - /share/wazuh/config/wazuh_indexer_ssl_certs/root-ca-manager.pem:/etc/ssl/root-ca.pem
      - /share/wazuh/config/wazuh_indexer_ssl_certs/wazuh-master.pem:/etc/ssl/filebeat.pem
      - /share/wazuh/config/wazuh_indexer_ssl_certs/wazuh-master-key.pem:/etc/ssl/filebeat.key
      - /share/wazuh/config/wazuh_cluster/wazuh_manager.conf:/wazuh-config-mount/etc/ossec.conf
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.tcp.routers.wazuh-agent.entrypoints=wazuh-tcp"
        - "traefik.tcp.routers.wazuh-agent.rule=HostSNI(`*`)"
        - "traefik.tcp.services.wazuh-agent.loadbalancer.server.port=1514"
      restart_policy:
        condition: any

  wazuh-worker:
    image: wazuh/wazuh-manager:4.10.3
    networks:
      - wazuh-net
    environment:
      - INDEXER_URL=https://wazuh1.indexer:9200
      - INDEXER_USERNAME=admin
      - INDEXER_PASSWORD=SecretPassword
      - FILEBEAT_SSL_VERIFICATION_MODE=full
      - SSL_CERTIFICATE_AUTHORITIES=/etc/ssl/root-ca.pem
      - SSL_CERTIFICATE=/etc/ssl/filebeat.pem
      - SSL_KEY=/etc/ssl/filebeat.key
    volumes:
      - /share/wazuh/worker/api/configuration:/var/ossec/api/configuration
      - /share/wazuh/worker/etc:/var/ossec/etc
      - /share/wazuh/worker/logs:/var/ossec/logs
      - /share/wazuh/worker/queue:/var/ossec/queue
      - /share/wazuh/worker/integrations:/var/ossec/integrations
      - /share/wazuh/worker/agentless:/var/ossec/agentless
      - /share/wazuh/worker/wodles:/var/ossec/wodles
      - /share/wazuh/worker/filebeat-etc:/etc/filebeat
      - /share/wazuh/worker/filebeat-var:/var/lib/filebeat
      - /share/wazuh/config/wazuh_indexer_ssl_certs/root-ca-manager.pem:/etc/ssl/root-ca.pem
      - /share/wazuh/config/wazuh_indexer_ssl_certs/wazuh-worker.pem:/etc/ssl/filebeat.pem
      - /share/wazuh/config/wazuh_indexer_ssl_certs/wazuh-worker-key.pem:/etc/ssl/filebeat.key
      - /share/wazuh/config/wazuh_cluster/wazuh_worker.conf:/wazuh-config-mount/etc/ossec.conf
    deploy:
      placement:
        constraints: [node.role == worker]
      labels:
        - "traefik.enable=true"
        - "traefik.tcp.routers.wazuh-agent.entrypoints=wazuh-tcp"
        - "traefik.tcp.routers.wazuh-agent.rule=HostSNI(`*`)"
        - "traefik.tcp.services.wazuh-agent.loadbalancer.server.port=1514"
      restart_policy:
        condition: any

  wazuh1-indexer:
    image: docker.elastic.co/elasticsearch/elasticsearch-wolfi:9.1.3
    networks:
      - wazuh-net
    ports:
      - 9200:9200
    environment:
      - "discovery.type=single-node"
      - "cluster.name=wazuh-cluster"
      - "bootstrap.memory_lock=true"
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
     
    volumes:
      - /share/wazuh/indexer2:/var/lib/wazuh-indexer
      - /share/wazuh/config/wazuh_indexer_ssl_certs/root-ca.pem:/usr/share/wazuh-indexer/config/certs/root-ca.pem
      - /share/wazuh/config/wazuh_indexer_ssl_certs/wazuh1-indexer-key.pem:/usr/share/wazuh-indexer/config/certs/wazuh1.indexer.key
      - /share/wazuh/config/wazuh_indexer_ssl_certs/wazuh1-indexer.pem:/usr/share/wazuh-indexer/config/certs/wazuh1.indexer.pem
      - /share/wazuh/config/wazuh_indexer_ssl_certs/wazuh1-indexer.pem:/etc/wazuh-indexer/certs/indexer.pem
      - /share/wazuh/config/wazuh_indexer/wazuh2.indexer.yml:/usr/share/wazuh-indexer/config/opensearch.yml
      - /share/wazuh/config/wazuh_indexer/internal_users.yml:/usr/share/wazuh-indexer/config/opensearch-security/internal_users.yml
    
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.wazuh2-indexer.rule=Host(`wazuh1.indexer`)"
        - "traefik.http.routers.wazuh2-indexer.entrypoints=websecure"
        - "traefik.http.routers.wazuh2-indexer.tls.certresolver=le"
      restart_policy:
        condition: any

  wazuh2-indexer:
    image: wazuh/wazuh-indexer:4.13.0-beta2
    user: 1000:1000
    networks:
      - wazuh-net
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms4g -Xmx4g"
      - "bootstrap.memory_lock=true"
    volumes:
      - /share/wazuh/indexer2:/var/lib/wazuh-indexer
      - /share/wazuh/config/wazuh_indexer_ssl_certs/root-ca.pem:/usr/share/wazuh-indexer/config/certs/root-ca.pem
      - /share/wazuh/config/wazuh_indexer_ssl_certs/wazuh2-indexer-key.pem:/usr/share/wazuh-indexer/config/certs/wazuh2.indexer.key
      - /share/wazuh/config/wazuh_indexer_ssl_certs/wazuh2-indexer.pem:/usr/share/wazuh-indexer/config/certs/wazuh2.indexer.pem
      - /share/wazuh/config/wazuh_indexer_ssl_certs/wazuh2-indexer.pem:/etc/wazuh-indexer/certs/indexer.pem
      - /share/wazuh/config/wazuh_indexer/wazuh2.indexer.yml:/usr/share/wazuh-indexer/config/opensearch.yml
      - /share/wazuh/config/wazuh_indexer/internal_users.yml:/usr/share/wazuh-indexer/config/opensearch-security/internal_users.yml
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.wazuh2-indexer.rule=Host(`wazuh2.indexer`)"
        - "traefik.http.routers.wazuh2-indexer.entrypoints=websecure"
        - "traefik.http.routers.wazuh2-indexer.tls.certresolver=le"
      restart_policy:
        condition: any

  wazuh3-indexer:
    image: wazuh/wazuh-indexer:4.13.0-beta2
    user: 1000:1000
    networks:
      - wazuh-net
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms4g -Xmx4g"
      - "bootstrap.memory_lock=true"
    volumes:
      - /share/wazuh/indexer3:/var/lib/wazuh-indexer
      - /share/wazuh/config/wazuh_indexer_ssl_certs/root-ca.pem:/usr/share/wazuh-indexer/config/certs/root-ca.pem
      - /share/wazuh/config/wazuh_indexer_ssl_certs/wazuh3-indexer-key.pem:/usr/share/wazuh-indexer/config/certs/wazuh3.indexer.key
      - /share/wazuh/config/wazuh_indexer_ssl_certs/wazuh3-indexer.pem:/usr/share/wazuh-indexer/config/certs/wazuh3.indexer.pem
      - /share/wazuh/config/wazuh_indexer_ssl_certs/wazuh3-indexer.pem:/etc/wazuh-indexer/certs/indexer.pem
      - /share/wazuh/config/wazuh_indexer/wazuh3.indexer.yml:/usr/share/wazuh-indexer/config/opensearch.yml
      - /share/wazuh/config/wazuh_indexer/internal_users.yml:/usr/share/wazuh-indexer/config/opensearch-security/internal_users.yml
    deploy:
      placement:
        constraints: [node.role == worker]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.wazuh3-indexer.rule=Host(`wazuh3.indexer`)"
        - "traefik.http.routers.wazuh3-indexer.entrypoints=websecure"
        - "traefik.http.routers.wazuh3-indexer.tls.certresolver=le"
      restart_policy:
        condition: any

  wazuh-dashboard:
    image: wazuh/wazuh-dashboard:4.10.3
    networks:
      - wazuh-net
    environment:
      - OPENSEARCH_HOSTS="https://wazuh1.indexer:9200"
      - WAZUH_API_URL="https://wazuh.master:55000"
      - API_USERNAME=wazuh-wui
      - API_PASSWORD=MyS3cr37P450r.*-
      - DASHBOARD_USERNAME=kibanaserver
      - DASHBOARD_PASSWORD=kibanaserver
    volumes:
      - /share/wazuh/config/wazuh_indexer_ssl_certs/wazuh-dashboard.pem:/usr/share/wazuh-dashboard/certs/wazuh-dashboard.pem
      - /share/wazuh/config/wazuh_indexer_ssl_certs/wazuh-dashboard-key.pem:/usr/share/wazuh-dashboard/certs/wazuh-dashboard-key.pem
      - /share/wazuh/config/wazuh_indexer_ssl_certs/root-ca.pem:/usr/share/wazuh-dashboard/certs/root-ca.pem
      - /share/wazuh/config/wazuh_dashboard/opensearch_dashboards.yml:/usr/share/wazuh-dashboard/config/opensearch_dashboards.yml
      - /share/wazuh/config/wazuh_dashboard/wazuh.yml:/usr/share/wazuh-dashboard/data/wazuh/config/wazuh.yml
      - /share/wazuh/dashboard:/usr/share/wazuh-dashboard/data/wazuh/config
      - /share/wazuh/dashboard:/usr/share/wazuh-dashboard/plugins/wazuh/public/assets/custom
    deploy:
      replicas: 2
      placement:
        constraints: [node.role == worker]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.wazuh-dashboard.rule=Host(`wazuh.dashboard`)"
        - "traefik.http.routers.wazuh-dashboard.entrypoints=websecure"
        - "traefik.http.routers.wazuh-dashboard.tls.certresolver=le"
      restart_policy:
        condition: any
